General grammar,
Production rules,,

expression ::= (line|EXCEPTION)$
EXCEPTION -> "Exception " .*
line ::= TIMESTAMP LOG_LEVEL THREAD_ID NUMBER_OF_THREADS* INSTANCE_NAME (message|EXCEPTION)
TIMESTAMP ::= [0-9]^2":"[0-9]^2":"[0-9]^2"."[0-9]^3
LOG_LEVEL -> "E"|"W"|"I"|"V"|"D"
THREAD_ID -> [0-9]+
NUMBER_OF_THREADS -> [0-9]+
INSTANCE_NAME -> ([a-zA-Z]+[0-9]*)+
message ::= ?

sip_address ::= SIP_SPECIFIER SIP_NUMBER* "@" SIP_DOMAIN*
SIP_SPECIFIER ::= "sip:"
SIP_NUMBER ::= [0-9a-zA-Z]+
SIP_DOMAIN ::= ([1-9][0-9]*(\.[0-9]+)^3|\w(\.\w)*)(':'[1-9]+[0-9]*)
? ::= .*


OneSIPConnector main log grammar,
Production rules,,

line ::= TIMESTAMP LOG_LEVEL THREAD_ID THREAD_OCCUPANCY* message$
message ::= (action|process|labelled-separator|parameter-name-value
                   |SEPARATOR|database_migrator|?)


action ::= ("C:" ID (aggregator aggregator_activity|callleg callleg_activity)|general_activity)
ID ::= [0-9]+
aggregator ::= AGGREGATOR ID
AGGREGATOR ::= "Ag:"
aggregator_activity ::= (aggregator_operation|aggregator_state_change|?)
aggregator_operation ::= ("SwOpRouteGeneralRequest"|?)
aggregator_state_change ::= STATE "=>" STATE
STATE ::= ('Idle','Registering'|?)
callleg ::= CALLLEG ID
CALLLEG ::= "Lg:"
callleg_activity ::= (websocket_transaction|udp_transaction|call_id)

websocket_transaction ::= WEBSOCKET websocket_state_transaction sip_address
WEBSOCKET ::= "[WebSocketWebRTC]"
websocket_state_transaction ::= (offering|proceeding|ringing|accepted|connected||disconnecting|disconnected)

udp_transaction ::= UDP udp_state_transaction sip_address
udp_state_transaction ::= (REQUEST_RCVD|REQUEST_SENT|REQUEST_OK_RCVD|REQUEST_OK_SENT|TERMINATED|OFFERING|ACCEPTED|CONNECTED)

call_id ::= (EXTERNAL_CALL_ID|INTERNAL_CALL_ID) CALL_ID
EXTERNAL_CALL_ID ::= "ExternalCallID:"
INTERNAL_CALL_ID ::= "InternalCallID:"
CALL_ID ::= [0-9a-zA-Z]('-'[0-9a-zA-Z])*

general_activity ::= (remregister|?)
remregister ::= REMREGISTER sip_address
REMREGISTER ::= "REMREGISTER"

;- process
process ::= PROCESS process_message
PROCESS ::= "PROCESS"
process_message ::= (PERFORMANCE_MONITORS|READ_CONFIG|UPGRADE_DATABASE|START_REGISTER|START_CLEANING|START_ANTIOVERFLOW|START_FIREWALL|?)
performance_monitors ::= "Starting performance monitors..."

labelled-separator ::= 
parameter-name-value
separator 
database_migrator
